# Math library, contains log, cos..

# MOST OF THE FUNCTION ARE NOT YET IMPLEMENTED

include std
include assert

PI = 3.141592653589793
NICE = 69
E = 2.718281828459045
LN_2 = 0.6931471805599453

def exp(x) {
    ret E ^ x
}

def ln(x) {
    # TODO impl
    ret assert(FALSE)
}

def log(x, n) {
    ret ln(x)/ln(n)
}

def sin(x) {
    # Is there not a way in which i can figure out the ratio of the sides of the triangle just from the angles? Answer should be no because someone should have already thought about that and that would have been the standard implementation of cos and sin because it would give 100% accuracy for very LITTLE computing power. But let's see why that won't work
    # TODO impl
    ret assert(FALSE)
}

def cos(x) {
    # TODO impl
    ret assert(FALSE)
}

def tan(x) {
    ret sin(x)/cos(x)
}

def asin(x) {
    # TODO impl
    ret assert(FALSE)
}

def acos(x) {
    # TODO impl
    ret assert(FALSE)
}

def atan(x) {
    # TODO impl
    ret assert(FALSE)
}

def degress(rad) {
    ret rad * 180 / PI
}

def radians(deg) {
    ret deg * PI / 180
}
